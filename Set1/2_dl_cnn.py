# -*- coding: utf-8 -*-
"""2_DL_CNN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HESz6riKsYUwHyZBDDGwcR2i4jnzxiNz
"""

"""
Program for identifying the given image digit. Handwritten numbers reading
"""

from keras.datasets import mnist
from keras.models import Sequential
from keras.layers import Conv2D,MaxPool2D,Flatten,Dense

#loading data
(x_train, y_train), (x_test, y_test) = mnist.load_data()

print(x_train.shape)

print(x_test.shape)

# reshaping the data
x_train = x_train.reshape(60000,28,28,1) #RGB data is 3 channel converting into 1 channel
x_test = x_test.reshape(10000,28,28,1)
print(x_train.shape,x_test.shape)

#normalising pixel values
x_train = (x_train/255) # to scale data manually to make between 0 to 1
x_test = (x_test/255)

#defining model
model = Sequential()
#adding convolution layer
model.add(Conv2D(32,(3,3),activation='relu',input_shape=(28,28,1)))
#adding pooling layer
model.add(MaxPool2D(2,2))
#adding fully connected layer
model.add(Flatten())
#hidden layer
model.add(Dense(100,activation='relu'))
#adding output layer
model.add(Dense(10,activation='softmax')) # 0 to 9 numbers as output

"""softmax : used for categorical problems"""

#compiling the model
model.compile(loss='sparse_categorical_crossentropy',optimizer='adam',metrics=['accuracy'])
#fitting the model
model.fit(x_train,y_train,batch_size=6000,epochs=10)

#evaluating the model
model.evaluate(x_test,y_test,batch_size=1000)